=== Create DB

create database testDB;

use testDB;

drop database testDB;

alter database testDB read only = 1;
alter database testDB read only = 0;
alter database testDB encryption = 'Y';

=== TABLES

create table myTable(
employee_id int,
first_name varchar(50),
last_name varchar(50),
hourly_pay decimal(5, 2),
hire_date datetime
);

rename table myTable to employees;
rename table employees to myTable;

alter table myTable add phone_number varchar(15);
alter table myTable rename column phone_number to email;

alter table myTable modify column email varchar(100);
alter table myTable modify column email varchar(100) after last_name; //change place of column
alter table myTable modify column email varchar(100) first; //put in the place of the first column

alter table myTable drop column email; //drop a column


select * from myTable;

drop table myTable;

=== INSERT

alter table myTable modify column hire_date date;
insert into myTable 
values(1, "juan", "penduko", 80.00, "2023-01-02", 0910123456789);

insert into myTable values(
2, "patrick", "star", 80.00, "2023-01-02", 0910123456789
),
(
3, "squidward", "squarepants", 80.00, "2023-01-02", 0910123456789
);

insert into myTable (employee_id, first_name, last_name)
values (4, "Sheldon", "Plankton"),
	   (5, "Spongebob", "Squarepants"); //other column will be null or omitted


=== SELECT

select * from myTable;

select first_name, last_name from myTable;

select * from myTable where employee_id = 3;

select * from myTable where employee_id != 3;

select * from myTable where hire_date is NULL;

SELECT * FROM myTable WHERE hourly_pay >= 50.00;


=== UPDATE and DELETE

UPDATE myTable SET hourly_pay = 10.25 WHERE employee_id = 6;

UPDATE myTable 
SET 
hourly_pay = 10.25, 
hire_date = "2025-01-01" 
WHERE employee_id = 6;

UPDATE myTable 
SET 
hourly_pay = 10.25; //to update all the rows within a column, exclude the where clause


DELETE FROM myTable; // delete the whole table, no where clause

DELETE FROM myTable
WHERE employee_id = 6;

=== AUTOCOMMIT, COMMIT, ROLLBACK

AUTOCOMMIT = mode by default is set to ON

SET AUTOCOMMIT = OFF; //transaction not saved automatically
COMMIT; //save point
ROLLBACK; // restore the save point


=== CURRENT_DATE(), CURRENT_TIME()

CREATE TABLE test(
my_date DATE,
my_time TIME
my_datetime DATETIME);

insert into test values
(current_date(), current_time(), now()); // good for transaction; you need to record realtime
(current_date() + 1);

=== UNIQUE constraint

create table products (
product_id int,
product_name varchar(25) unique, // you can't insert any product names that are the same
price decimal(4, 2)
);


alter table products
add constraint unique(product_name); //alter table make unique column


=== NOT NULL constraint

create table products (
product_id int,
product_name varchar(25) NOT NULL, // cannot be null
price decimal(4, 2)
);

alter table products
MODIFY price DECIMAL (4,2) NOT NULL);

=== CHECK constraint

create table employees(
employee_id int,
first_name varchar(50),
last_name varchar(50),
hourly_pay decimal(5, 2),
hire_date date,
CHECK (hourly_pay >= 10.00)
);

create table employees(
employee_id int,
first_name varchar(50),
last_name varchar(50),
hourly_pay decimal(5, 2),
hire_date date,
CONSTRAINT chk_hrly_pay CHECK (hourly_pay >= 10.00) //name the constraint to easily drop later
);


alter table employees
add constraint chk_hrly_pay CHECK(hourly_pay >= 10.00); //add a check to an existing table

alter table employees
drop check chk_hrly_pay; //delete check

=== DEFAULT constraint

//The DEFAULT constraint in MySQL is used to specify a default value for a column. 
When a new row is inserted into a table and no explicit value is provided for a column with a DEFAULT constraint, the predefined default value is automatically assigned to that column. 

create table employees(
employee_id int,
first_name varchar(50),
last_name varchar(50),
hourly_pay decimal(5, 2) default 0.00
);

alter table products
alter hourly_pay set default 0; //add a default to an existing table

INSERT INTO employees (employee_id, employee_name)
values (101, "Juan"),
	    (102, "Pedro");

=== PRIMARY KEY

create table transactions(

transaction_id int primary key,
amount decima (5,2)
);


alter table transactions 
add constraint
primary key(transaction_id); //add a primary key to an existing table

=== FOREIGN KEY // is a primary key from 1 table that can be found on another table/ link between 2 tables

create table customers(
customer_id int primary key auto_increment,
first_name varchar(50),
last_name varchar(50)
);

insert into customers (first_name, last_name)
values ("Fred", "Fish"),
("Larry", "Lobster"),
("Bubble", "Bass");

create table transactions(
transaction_id int primary key auto_increment,
amount decimal (5,2),
customer_id int,
FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

ALTER TABLE transactions
DROP FOREIGN KEY transactions_ibfk_1;

ALTER TABLE transactions
ADD CONSTRAINT fk_customer_id
FOREIGN KEY(customer_id) REFERENCES customers(customer_id); //add a foreign key to an existing table


=== AUTO INCREMENT

create table transactions(
transaction_id int primary key auto_increment,
amount decima (5,2)
);

alter table transactions
auto_increment = 1000;

insert into transactions (amount)
values (4.99),
(2.99);

===
